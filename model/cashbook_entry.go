// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CashbookEntry cashbook entry
//
// swagger:model CashbookEntry
type CashbookEntry struct {

	// amount
	Amount float64 `json:"Amount,omitempty"`

	// direction
	Direction string `json:"Direction,omitempty"`

	// entry type
	EntryType string `json:"EntryType,omitempty"`

	// internal information
	InternalInformation string `json:"InternalInformation,omitempty"`

	// note
	Note string `json:"Note,omitempty"`

	// transaction date
	// Format: date-time
	TransactionDate strfmt.DateTime `json:"TransactionDate,omitempty"`
}

// Validate validates this cashbook entry
func (m *CashbookEntry) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTransactionDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CashbookEntry) validateTransactionDate(formats strfmt.Registry) error {
	if swag.IsZero(m.TransactionDate) { // not required
		return nil
	}

	if err := validate.FormatOf("TransactionDate", "body", "date-time", m.TransactionDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this cashbook entry based on context it is used
func (m *CashbookEntry) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CashbookEntry) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CashbookEntry) UnmarshalBinary(b []byte) error {
	var res CashbookEntry
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
