// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InboxGetResultItem inbox get result item
//
// swagger:model InboxGetResultItem
type InboxGetResultItem struct {

	// creation date
	// Format: date-time
	CreationDate strfmt.DateTime `json:"CreationDate,omitempty"`

	// inbox item ID
	InboxItemID int32 `json:"InboxItemID,omitempty"`

	// peppol document type
	PeppolDocumentType string `json:"PeppolDocumentType,omitempty"`

	// peppol file ID
	// Example: 00000000-0000-0000-0000-000000000000
	// Format: uuid
	PeppolFileID strfmt.UUID `json:"PeppolFileID,omitempty"`

	// receiver company ID
	ReceiverCompanyID string `json:"ReceiverCompanyID,omitempty"`

	// receiver peppol ID
	ReceiverPeppolID string `json:"ReceiverPeppolID,omitempty"`

	// sender company ID
	SenderCompanyID string `json:"SenderCompanyID,omitempty"`

	// sender peppol ID
	SenderPeppolID string `json:"SenderPeppolID,omitempty"`
}

// Validate validates this inbox get result item
func (m *InboxGetResultItem) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreationDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePeppolFileID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InboxGetResultItem) validateCreationDate(formats strfmt.Registry) error {
	if swag.IsZero(m.CreationDate) { // not required
		return nil
	}

	if err := validate.FormatOf("CreationDate", "body", "date-time", m.CreationDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *InboxGetResultItem) validatePeppolFileID(formats strfmt.Registry) error {
	if swag.IsZero(m.PeppolFileID) { // not required
		return nil
	}

	if err := validate.FormatOf("PeppolFileID", "body", "uuid", m.PeppolFileID.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this inbox get result item based on context it is used
func (m *InboxGetResultItem) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *InboxGetResultItem) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InboxGetResultItem) UnmarshalBinary(b []byte) error {
	var res InboxGetResultItem
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
