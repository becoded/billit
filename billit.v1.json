{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Billit.API"
  },
  "host": "api.billit.be",
  "schemes": [
    "https"
  ],
  "paths": {
    "/v1/account/accountInformation": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_GetAccountInformation",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Get account information",
            "schema": {
              "$ref": "#/definitions/AccountInformation"
            }
          }
        }
      }
    },
    "/v1/account/ssoToken": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_GetSSOToken",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/account/sequences": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_PostSequences",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "SequenceRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SequenceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/account/registercompany": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account_RegisterCompany",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "RegisterAccountRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterAccountRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Registers a company",
            "schema": {
              "$ref": "#/definitions/RegisterAccountResponse"
            }
          }
        }
      }
    },
    "/v1/account/license": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Update the license",
        "operationId": "Account_UpdateLicense",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "UpdateLicenseModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateLicenseRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update a company license",
            "schema": {
              "$ref": "#/definitions/UpdateLicenseResponseModel"
            }
          }
        }
      }
    },
    "/v1/account/license/addons": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Add new License Billable",
        "operationId": "Account_AddLicenseBillable",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "licenseBillableModel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddNewLicenseBillableModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Add a new license billable",
            "schema": {
              "$ref": "#/definitions/AddNewLicenseBillableResponseModel"
            }
          }
        }
      }
    },
    "/v1/accountant/feeds": {
      "get": {
        "tags": [
          "Accountant"
        ],
        "operationId": "Accountant_GetFeeds",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Get A list of all feeds to download.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Feed"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Accountant"
        ],
        "summary": "Register a new feed. All newly exported orders or documents will be available in this new feed.",
        "operationId": "Accountant_PostFeeds",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "feed",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Feed"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feed has been registered"
          }
        }
      }
    },
    "/v1/accountant/feeds/{feedName}": {
      "get": {
        "tags": [
          "Accountant"
        ],
        "summary": "Get A list of all feeds to download. Only query this once per minute",
        "operationId": "Accountant_GetIndex",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "feedName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get a list of all files to download.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FeedItem"
              }
            }
          },
          "400": {
            "description": "The request did not validate. Check response body for more details",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FeedItem"
              }
            }
          },
          "500": {
            "description": "There was a problem. We have been notified already but dont hesitate to contact support.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FeedItem"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Accountant"
        ],
        "summary": "Delete the feed",
        "operationId": "Accountant_DeleteFeeds",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "feedName",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The Feed has been deleted"
          }
        }
      }
    },
    "/v1/accountant/feeds/{feedName}/{feedItemID}/confirm": {
      "post": {
        "tags": [
          "Accountant"
        ],
        "summary": "Confirm each succesfully downloaded feed item to remove it from the feedlist",
        "operationId": "Accountant_PostConfirm",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "feedName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "feedItemID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ConfirmRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfirmRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/accountant/feeds/{feedName}/{feedItemID}": {
      "get": {
        "tags": [
          "Accountant"
        ],
        "summary": "download a coda file from the feed",
        "operationId": "Accountant_GetFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "feedItemID",
            "in": "path",
            "description": "The id of the file you want download",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "feedName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/Cashbook/Initialize": {
      "post": {
        "tags": [
          "Cashbook"
        ],
        "summary": "Initialize the cash book for first use",
        "operationId": "Cashbook_InitializeCashbook",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cashbookInitialization",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CashbookInitialization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Initialize the cash book for first use"
          }
        }
      }
    },
    "/v1/Cashbook/Close": {
      "post": {
        "tags": [
          "Cashbook"
        ],
        "summary": "Initialize the cash book for first use",
        "operationId": "Cashbook_CloseCashbook",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Close the active cash book, initialization of a new one is required to add new entries"
          }
        }
      }
    },
    "/v1/Cashbook": {
      "get": {
        "tags": [
          "Cashbook"
        ],
        "summary": "Get the current cash book",
        "operationId": "Cashbook_GetCashbook",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Get information about the current active cash book",
            "schema": {
              "$ref": "#/definitions/CashbookModel"
            }
          }
        }
      }
    },
    "/v1/Cashbook/Entries": {
      "get": {
        "tags": [
          "Cashbook"
        ],
        "summary": "Get an overview of all the entries in the cash book",
        "operationId": "Cashbook_GetCashbookEntries",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fullTextSearch",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get an overview of all the entries in the cash book",
            "schema": {
              "$ref": "#/definitions/PageResult_CashbookEntry"
            }
          }
        }
      }
    },
    "/v1/Cashbook/History": {
      "get": {
        "tags": [
          "Cashbook"
        ],
        "summary": "Get the current cash book",
        "operationId": "Cashbook_GetCashbooks",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Get an overview of all the closed cash books ",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CashbookModel"
              }
            }
          }
        }
      }
    },
    "/v1/Cashbook/{cashbookID}/History": {
      "get": {
        "tags": [
          "Cashbook"
        ],
        "summary": "Get an overview of all the entries in a closed cash book",
        "operationId": "Cashbook_GetCashbookHistory",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cashbookID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fullTextSearch",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get an overview of all the entries in the cash book",
            "schema": {
              "$ref": "#/definitions/PageResult_CashbookEntry"
            }
          }
        }
      }
    },
    "/v1/Cashbook/AddEntry": {
      "post": {
        "tags": [
          "Cashbook"
        ],
        "summary": "Add an entry to the cash book",
        "operationId": "Cashbook_PostCashbookEntry",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "cashbookInputEntry",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CashbookEntry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Add an entry to the cash book",
            "schema": {
              "$ref": "#/definitions/CashbookEntry"
            }
          }
        }
      }
    },
    "/v1/DailyReceiptBooks/commands/CreateEntryInOpenExistingOrNew": {
      "post": {
        "tags": [
          "DailyReceipt"
        ],
        "summary": "Add a new daily receipt to a new or open daily receipt book",
        "operationId": "DailyReceipt_PostDailyReceiptBookEntry",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "DailyReceiptEntry",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DailyReceiptBookEntryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Save an daily receipt entry",
            "schema": {
              "$ref": "#/definitions/PostDailyReceiptBookEntryResponseModel"
            }
          }
        }
      }
    },
    "/v1/DailyReceiptBooks/DailyReceiptEntry/{DailyReceiptEntryID}": {
      "get": {
        "tags": [
          "DailyReceipt"
        ],
        "summary": "Get a daily receipt entry",
        "operationId": "DailyReceipt_GetDailyReceiptEntry",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "DailyReceiptEntryID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Get daily receipt entry detail",
            "schema": {
              "$ref": "#/definitions/GetDailyReceiptEntryResponseModel"
            }
          }
        }
      }
    },
    "/v1/DailyReceiptBooks/{DailyReceiptBookID}": {
      "get": {
        "tags": [
          "DailyReceipt"
        ],
        "summary": "Get a daily receipt book with details",
        "operationId": "DailyReceipt_GetDailyReceiptBook",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "DailyReceiptBookID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Get an daily receipt book",
            "schema": {
              "$ref": "#/definitions/DailyReceiptBookModelResponseModel"
            }
          }
        }
      }
    },
    "/v1/DailyReceiptBooks": {
      "get": {
        "tags": [
          "DailyReceipt"
        ],
        "summary": "Get a daily receipt book list",
        "operationId": "DailyReceipt_GetDailyReceiptBooks",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Get an daily receipt book list",
            "schema": {
              "$ref": "#/definitions/DailyReceiptBookModelResponseModel"
            }
          }
        }
      }
    },
    "/v1/documents": {
      "get": {
        "tags": [
          "Document"
        ],
        "operationId": "Document_GetDocuments",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fullTextSearch",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get a list of documents",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocumentAPIView"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Document"
        ],
        "operationId": "Document_PostDocument",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Document",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Save a document",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/v1/documents/{documentID}": {
      "get": {
        "tags": [
          "Document"
        ],
        "operationId": "Document_GetDocument",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "documentID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Get a document",
            "schema": {
              "$ref": "#/definitions/DocumentAPIView"
            }
          }
        }
      }
    },
    "/v1/einvoices/registrations": {
      "get": {
        "tags": [
          "Einvoice"
        ],
        "operationId": "Einvoice_GetRegistrations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Retrieve all registered companies",
            "schema": {
              "$ref": "#/definitions/GetEinvoiceAccountsReponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Einvoice"
        ],
        "operationId": "Einvoice_PostRegistration",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "registrationRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EinvoiceRegistrationPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Register a new entity",
            "schema": {
              "$ref": "#/definitions/AccountRegistrationResponse"
            }
          }
        }
      }
    },
    "/v1/einvoices/registrations/{registrationID}": {
      "get": {
        "tags": [
          "Einvoice"
        ],
        "operationId": "Einvoice_GetRegistration",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "registrationID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve an registered Company",
            "schema": {
              "$ref": "#/definitions/GetEinvoiceAccountsReponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Einvoice"
        ],
        "operationId": "Einvoice_DeleteRegistration",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "registrationID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete a registration",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Einvoice"
        ],
        "operationId": "Einvoice_PatchEntity",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "registrationID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "einvoiceRegistrationPatch",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update a entity",
            "schema": {
              "$ref": "#/definitions/AccountRegistrationResponse"
            }
          }
        }
      }
    },
    "/v1/einvoices/registrations/{registrationID}/integrations": {
      "post": {
        "tags": [
          "Einvoice"
        ],
        "operationId": "Einvoice_PostRegistrationIntegration",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "registrationID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "post",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IntegrationPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activate a new integration",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/v1/einvoices/registrations/{registrationID}/integrations/{integrationID}": {
      "delete": {
        "tags": [
          "Einvoice"
        ],
        "operationId": "Einvoice_DeleteRegistrationIntegration",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "registrationID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "integrationID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Deactivate an integration",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/v1/einvoices/registrations/{registrationID}/commands/send": {
      "post": {
        "tags": [
          "Einvoice"
        ],
        "operationId": "Einvoice_PostSend",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "registrationID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sendRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAndSendEDocumentPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create and Send an E-document",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/v1/einvoices/registrations/{registrationID}/orders": {
      "get": {
        "tags": [
          "Einvoice"
        ],
        "operationId": "Einvoice_GetOrders",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "registrationID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fullTextSearch",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve the E-documents",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/v1/einvoices/registrations/{registrationID}/files/{fileID}": {
      "get": {
        "tags": [
          "Einvoice"
        ],
        "operationId": "Einvoice_GetFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "registrationID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "fileID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Get a file",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/v1/einvoices/registrations/{registrationID}/orders/{orderID}": {
      "get": {
        "tags": [
          "Einvoice"
        ],
        "operationId": "Einvoice_GetOrder",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "registrationID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Register a new participant on the e-Invoice network.",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Einvoice"
        ],
        "operationId": "Einvoice_PatchOrder",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "registrationID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "delta",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Patch an E-document",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/v1/einvoices/registrations/{registrationID}/webhooks": {
      "get": {
        "tags": [
          "Einvoice"
        ],
        "operationId": "Einvoice_GetWebhooks",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "registrationID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Get webhooks",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Einvoice"
        ],
        "operationId": "Einvoice_PostWebhook",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "registrationID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "webhook",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Save an webhook",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        }
      }
    },
    "/v1/einvoices/registrations/{registrationID}/webhooks/{webhookID}": {
      "delete": {
        "tags": [
          "Einvoice"
        ],
        "operationId": "Einvoice_DeleteWebhooks",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "registrationID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "webhookID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete an webhook",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/v1/einvoices/registrations/{registrationID}/webhooks/refresh/{webhookID}": {
      "post": {
        "tags": [
          "Einvoice"
        ],
        "operationId": "Einvoice_RefreshWebhookSecret",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "registrationID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "webhookID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Refresh an webhook secret",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/v1/files/{fileID}": {
      "get": {
        "tags": [
          "File"
        ],
        "operationId": "File_GetOrders",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fileID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Get a file",
            "schema": {
              "$ref": "#/definitions/File"
            }
          }
        }
      }
    },
    "/v1/financialTransactions/importFile": {
      "post": {
        "tags": [
          "FinancialTransaction"
        ],
        "operationId": "FinancialTransaction_PostImportFile",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "importFile",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/File"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Upload a coda file"
          }
        }
      }
    },
    "/v1/financialTransactions/commands/import": {
      "post": {
        "tags": [
          "FinancialTransaction"
        ],
        "operationId": "FinancialTransaction_PostImport",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "transactions",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Transaction"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/v1/financialTransactions": {
      "get": {
        "tags": [
          "FinancialTransaction"
        ],
        "summary": "",
        "operationId": "FinancialTransaction_GetBankTransactions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fullTextSearch",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/v1/glaccounts": {
      "post": {
        "tags": [
          "GLAccount"
        ],
        "operationId": "GLAccount_PostGLAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "account",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GLAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Save an general ledger account code",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/v1/glaccounts/commands/import": {
      "post": {
        "tags": [
          "GLAccount"
        ],
        "operationId": "GLAccount_PostGLAccountBulk",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "accounts",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GLAccount"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Save an general ledger account code",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/v1/journals/commands/import": {
      "post": {
        "tags": [
          "Journal"
        ],
        "operationId": "Journal_PostGLAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "journals",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Journal"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Import a list of journals",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/v1/misc/companysearch/{Keywords}": {
      "get": {
        "tags": [
          "Misc"
        ],
        "operationId": "Misc_GetCompanySearch",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Keywords",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Search a company based on any keyword",
            "schema": {
              "$ref": "#/definitions/CompanySearchResult"
            }
          }
        }
      }
    },
    "/v1/misc/typecodes/{TypeCodeType}": {
      "get": {
        "tags": [
          "Misc"
        ],
        "operationId": "Misc_GetTypeCodes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "TypeCodeType",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get all translations of a TypeCode",
            "schema": {
              "$ref": "#/definitions/TypeCodeResult"
            }
          }
        }
      }
    },
    "/v1/misc/typecodes/{TypeCodeType}/{key}/{language}": {
      "get": {
        "tags": [
          "Misc"
        ],
        "operationId": "Misc_GetTranslation",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "TypeCodeType",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "language",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get a translation of a key of a typecode",
            "schema": {
              "$ref": "#/definitions/TypeCodeResult"
            }
          }
        }
      }
    },
    "/OAuth2/token": {
      "post": {
        "tags": [
          "OAuth2"
        ],
        "operationId": "OAuth2_PostToken",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "OAuthAccessTokenRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OAuthAccessTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/OAuth2/revoke": {
      "post": {
        "tags": [
          "OAuth2"
        ],
        "operationId": "OAuth2_PostTokenRevoke",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/orders": {
      "get": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_GetOrders",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fullTextSearch",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get a list of invoices/creditnotes/offers/...",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Order"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_PostOrders",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "order",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Save an order",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/v1/orders/{orderID}/bookingEntries": {
      "put": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_PutOrderBookings",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "orderID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "bookingEntries",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BookingEntry"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Save booking lines collection"
          }
        }
      }
    },
    "/v1/orders/{orderID}": {
      "get": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_GetOrder",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "orderID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "documentType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get an order",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_DeleteOrder",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "orderID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete an order",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_PatchOrders",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "orderID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "delta",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Patch an order"
          }
        }
      }
    },
    "/v1/orders/{orderID}/payments": {
      "post": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_PostOrderPayment",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "orderID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostPaymentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Add partial payment to order"
          }
        }
      }
    },
    "/v1/orders/commands/send": {
      "post": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_PostSend",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "sendRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All orders have been sent"
          }
        }
      }
    },
    "/v1/orders/commands/eSign/{orderID}": {
      "post": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_ESignOrder",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "orderID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "E-Sign an order",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/v1/orders/deleted": {
      "get": {
        "tags": [
          "Order"
        ],
        "operationId": "Order_GetDeleted",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "All orders have been sent"
          }
        }
      }
    },
    "/v1/parties/{partyID}": {
      "get": {
        "tags": [
          "Party"
        ],
        "operationId": "Party_GetParty",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partyID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Get a party",
            "schema": {
              "$ref": "#/definitions/Party"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Party"
        ],
        "summary": "Endpoint to patch Party Properties. Won't work with NavigationProperties.",
        "operationId": "Party_PatchParties",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "partyID",
            "in": "path",
            "description": "The PartyID of the Party you want to update",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "delta",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Patch a party"
          }
        }
      }
    },
    "/v1/parties": {
      "get": {
        "tags": [
          "Party"
        ],
        "operationId": "Party_GetParties",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fullTextSearch",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get a list of customers or suppliers",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Party"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Party"
        ],
        "operationId": "Party_PostParty",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "party",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Party"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Save a party",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/v1/peppol/participants": {
      "post": {
        "tags": [
          "Peppol"
        ],
        "operationId": "Peppol_PostParticipant",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "registerRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterParticipantRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Send a direct Peppol message. Compatible with receivers that support Invoice5 or Creditnote5, BisV3 Invoice or BisV3 Creditnote",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Peppol"
        ],
        "operationId": "Peppol_DeleteParticipant",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "registerRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteParticipantRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Send a direct Peppol message. Compatible with receivers that support Invoice5 or Creditnote5, BisV3 Invoice or BisV3 Creditnote",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/v1/peppol/inbox": {
      "get": {
        "tags": [
          "Peppol"
        ],
        "operationId": "Peppol_GetInbox",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ReceiverCompanyID",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists the first 10 peppol items in the inbox. Use the file api to download the actual message and the confirm method to remove it from the queue",
            "schema": {
              "$ref": "#/definitions/InboxGetResult"
            }
          }
        }
      }
    },
    "/v1/peppol/inbox/{inboxItemId}/confirm": {
      "post": {
        "tags": [
          "Peppol"
        ],
        "operationId": "Peppol_InboxItemConfirm",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "inboxItemId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Send a direct Peppol message. Compatible with receivers that support Invoice5 or Creditnote5, BisV3 Invoice or BisV3 Creditnote",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/v1/peppol/inbox/{inboxItemId}/refuse": {
      "post": {
        "tags": [
          "Peppol"
        ],
        "operationId": "Peppol_InboxItemRefuse",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "inboxItemId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RefusePeppolItemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Send a direct Peppol message. Compatible with receivers that support Invoice5 or Creditnote5, BisV3 Invoice or BisV3 Creditnote",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/v1/peppol/sendOrder": {
      "post": {
        "tags": [
          "Peppol"
        ],
        "operationId": "Peppol_PostSendOrder",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "order",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Send a direct Peppol message. Compatible with receivers that support Invoice5, Creditnote5, BisV3 Invoice or BisV3 Creditnote",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/v1/peppol/participantInformation/{VATorCBE}": {
      "get": {
        "tags": [
          "Peppol"
        ],
        "operationId": "Peppol_GetParticipantInformation",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "VATorCBE",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "OnlyCheckDNS",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Peppol participant information. API key is not required.",
            "schema": {
              "$ref": "#/definitions/ParticipantInformationResponse"
            }
          }
        }
      }
    },
    "/v1/products/{productID}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get a specific product",
        "operationId": "Product_GetProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "productID",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Get a product",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        }
      }
    },
    "/v1/products": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get a list of products",
        "operationId": "Product_GetProducts",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get a list of products",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create a new product of update an existing product",
        "operationId": "Product_PostProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "product",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Save a product",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/v1/reports": {
      "get": {
        "tags": [
          "Report"
        ],
        "operationId": "Report_ReportListGet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Returns a list of available reports for the current user",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReportsExportOverViewModel"
              }
            }
          }
        }
      }
    },
    "/v1/reports/{reportID}": {
      "get": {
        "tags": [
          "Report"
        ],
        "operationId": "Report_ReportDetailGet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "reportID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the result and name of the report specified by the reportID",
            "schema": {
              "$ref": "#/definitions/ReportDetailModel"
            }
          }
        }
      }
    },
    "/v1/toProcess": {
      "post": {
        "tags": [
          "ToProcess"
        ],
        "operationId": "ToProcess_PostToProcess",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "toProcess",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ToProcessSaveRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Save a new document to process. Rerturns an upload ID",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/v1/toProcess/{uploadID}": {
      "delete": {
        "tags": [
          "ToProcess"
        ],
        "operationId": "ToProcess_DeleteToProcess",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "uploadID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete a document to process, based on the upload"
          }
        }
      }
    },
    "/v1/webhooks": {
      "get": {
        "tags": [
          "Webhook"
        ],
        "operationId": "Webhook_GetWebhooks",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Get webhooks",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Webhook"
        ],
        "summary": "Creates a webhook",
        "description": "Sample request:\r\n            \r\n    POST /v1/webhooks\r\n    {\r\n       \"EntityType\": \"Order\",\r\n       \"WebhookURL\": \"https://my.Webhook.url.com/Callback\"\r\n    }",
        "operationId": "Webhook_PostWebhook",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "webhook",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Save an webhook",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        }
      }
    },
    "/v1/webhooks/{webhookID}": {
      "delete": {
        "tags": [
          "Webhook"
        ],
        "operationId": "Webhook_DeleteWebhooks",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "webhookID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete an webhook",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/v1/webhooks/refresh/{webhookID}": {
      "post": {
        "tags": [
          "Webhook"
        ],
        "operationId": "Webhook_RefreshWebhookSecret",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "webhookID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Refresh an webhook secret",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccountInformation": {
      "type": "object",
      "properties": {
        "Email": {
          "type": "string"
        },
        "Companies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountInformationParty"
          }
        },
        "UserCompanyRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserCompanyRole"
          }
        },
        "ExternalProviderID": {
          "type": "string"
        },
        "ExternalProviderTC": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "LoginOrRegisterNeeded": {
          "type": "boolean"
        },
        "NationalIdentityNumber": {
          "type": "string"
        },
        "CardNumber": {
          "type": "string"
        },
        "PhoneNumber": {
          "type": "string"
        },
        "UniqueReference": {
          "type": "string"
        }
      }
    },
    "AccountInformationParty": {
      "type": "object",
      "properties": {
        "TabNameAlias": {
          "type": "string"
        },
        "APIAllowed": {
          "type": "boolean"
        },
        "LogoFileID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "APIEnabledFeatures": {
          "$ref": "#/definitions/APIEnabledFeatures"
        },
        "UserLanguage": {
          "type": "string"
        },
        "PartyID": {
          "format": "int32",
          "type": "integer"
        },
        "BookYearStart": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "Nr": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "CommercialName": {
          "type": "string"
        },
        "Addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartyAddress"
          }
        },
        "Street": {
          "type": "string"
        },
        "StreetNumber": {
          "type": "string"
        },
        "Box": {
          "type": "string"
        },
        "Zipcode": {
          "type": "string"
        },
        "CostCategoryCode": {
          "format": "int32",
          "type": "integer"
        },
        "AccountingCostTypeName": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        },
        "IBAN": {
          "type": "string"
        },
        "BIC": {
          "type": "string"
        },
        "Mobile": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        },
        "Fax": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Website": {
          "type": "string"
        },
        "Contact": {
          "type": "string"
        },
        "ContactFirstName": {
          "type": "string"
        },
        "ContactLastName": {
          "type": "string"
        },
        "VATNumber": {
          "type": "string"
        },
        "PeppolIdentifier": {
          "type": "string"
        },
        "RPR": {
          "type": "string"
        },
        "LastModified": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "Created": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "PartyType": {
          "enum": [
            "Customer",
            "Supplier"
          ],
          "type": "string"
        },
        "VATLiable": {
          "type": "boolean"
        },
        "AccountantCode": {
          "format": "int32",
          "type": "integer"
        },
        "GLAccountCode": {
          "format": "int64",
          "type": "integer"
        },
        "Language": {
          "type": "string"
        },
        "VentilationCode": {
          "type": "string"
        },
        "ExternalProviderID": {
          "type": "string"
        },
        "ExternalProviderTC": {
          "type": "string"
        },
        "CustomFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MutableKeyValuePair_StringString"
          }
        },
        "BankAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BankAccount"
          }
        },
        "Users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserCoreInfo"
          }
        },
        "DefaultPaymentMethodTC": {
          "type": "string"
        },
        "DefaultPaid": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "DefaultTransportTypeTC": {
          "type": "string"
        },
        "FinancialReductionPercentageDefault": {
          "format": "double",
          "type": "number"
        },
        "FinancialReductionDaysDefault": {
          "format": "int32",
          "type": "integer"
        },
        "DefaultExpiryOffset": {
          "format": "int32",
          "type": "integer"
        },
        "GLDefaultExpiryOffset": {
          "format": "int64",
          "type": "integer"
        },
        "Role": {
          "type": "string"
        },
        "InternalInfo": {
          "type": "string"
        },
        "VATDeductable": {
          "type": "boolean"
        },
        "DefaultReductionPercentage": {
          "format": "double",
          "type": "number"
        },
        "Identifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartyIdentifier"
          }
        },
        "BookCategoryTC": {
          "type": "string"
        },
        "SmallEnterprise": {
          "type": "boolean"
        },
        "AutoSendInvoiceReminders": {
          "type": "boolean"
        },
        "DefaultCurrencyTC": {
          "type": "string"
        },
        "Regime": {
          "type": "string"
        },
        "SubRegime": {
          "type": "string"
        },
        "IsHighRisk": {
          "type": "boolean"
        },
        "SendUBL": {
          "type": "boolean"
        },
        "SendPDF": {
          "type": "boolean"
        }
      }
    },
    "UserCompanyRole": {
      "type": "object",
      "properties": {
        "PartyID": {
          "format": "int32",
          "type": "integer"
        },
        "UserRoleTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "APIEnabledFeatures": {
      "type": "object",
      "properties": {
        "TimeRegistration": {
          "type": "boolean"
        },
        "Projects": {
          "type": "boolean"
        },
        "DailyReceipts": {
          "type": "boolean"
        },
        "FinancialReduction": {
          "type": "boolean"
        },
        "GLAccounts": {
          "type": "boolean"
        },
        "Cashbook": {
          "type": "boolean"
        }
      }
    },
    "PartyAddress": {
      "type": "object",
      "properties": {
        "AddressType": {
          "type": "string"
        },
        "Tav": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Street": {
          "type": "string"
        },
        "StreetNumber": {
          "type": "string"
        },
        "Box": {
          "type": "string"
        },
        "Zipcode": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        }
      }
    },
    "MutableKeyValuePair_StringString": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "BankAccount": {
      "type": "object",
      "properties": {
        "IBAN": {
          "type": "string"
        },
        "BIC": {
          "type": "string"
        },
        "Currency": {
          "type": "string"
        },
        "Verified": {
          "type": "boolean"
        },
        "Name": {
          "type": "string"
        },
        "Saldo": {
          "format": "double",
          "type": "number"
        },
        "ExternalProviderID": {
          "type": "string"
        },
        "LogoFileID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "LogoFileUrl": {
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        },
        "BankAccountName": {
          "type": "string"
        },
        "BankProviderStatus": {
          "type": "string"
        },
        "AccountIdentification": {
          "type": "string"
        },
        "Active": {
          "type": "boolean"
        }
      }
    },
    "UserCoreInfo": {
      "type": "object",
      "properties": {
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "Role": {
          "type": "string"
        },
        "ExternalProviderID": {
          "type": "string"
        }
      }
    },
    "PartyIdentifier": {
      "type": "object",
      "properties": {
        "IdentifierType": {
          "type": "string"
        },
        "Identifier": {
          "type": "string"
        },
        "SchemeID": {
          "type": "string"
        },
        "Preferred": {
          "type": "boolean"
        }
      }
    },
    "SequenceRequest": {
      "type": "object",
      "properties": {
        "SequenceType": {
          "type": "string"
        },
        "Consume": {
          "type": "boolean"
        }
      }
    },
    "RegisterAccountRequestModel": {
      "type": "object",
      "properties": {
        "Company": {
          "$ref": "#/definitions/Party"
        },
        "AccountSettings": {
          "$ref": "#/definitions/AccountSettings"
        },
        "License": {
          "$ref": "#/definitions/LicenseConfiguration"
        }
      }
    },
    "Party": {
      "type": "object",
      "properties": {
        "PartyID": {
          "format": "int32",
          "type": "integer"
        },
        "BookYearStart": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "Nr": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "CommercialName": {
          "type": "string"
        },
        "Addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartyAddress"
          }
        },
        "Street": {
          "type": "string"
        },
        "StreetNumber": {
          "type": "string"
        },
        "Box": {
          "type": "string"
        },
        "Zipcode": {
          "type": "string"
        },
        "CostCategoryCode": {
          "format": "int32",
          "type": "integer"
        },
        "AccountingCostTypeName": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        },
        "IBAN": {
          "type": "string"
        },
        "BIC": {
          "type": "string"
        },
        "Mobile": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        },
        "Fax": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Website": {
          "type": "string"
        },
        "Contact": {
          "type": "string"
        },
        "ContactFirstName": {
          "type": "string"
        },
        "ContactLastName": {
          "type": "string"
        },
        "VATNumber": {
          "type": "string"
        },
        "PeppolIdentifier": {
          "type": "string"
        },
        "RPR": {
          "type": "string"
        },
        "LastModified": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "Created": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "PartyType": {
          "enum": [
            "Customer",
            "Supplier"
          ],
          "type": "string"
        },
        "VATLiable": {
          "type": "boolean"
        },
        "AccountantCode": {
          "format": "int32",
          "type": "integer"
        },
        "GLAccountCode": {
          "format": "int64",
          "type": "integer"
        },
        "Language": {
          "type": "string"
        },
        "VentilationCode": {
          "type": "string"
        },
        "ExternalProviderID": {
          "type": "string"
        },
        "ExternalProviderTC": {
          "type": "string"
        },
        "CustomFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MutableKeyValuePair_StringString"
          }
        },
        "BankAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BankAccount"
          }
        },
        "Users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserCoreInfo"
          }
        },
        "DefaultPaymentMethodTC": {
          "type": "string"
        },
        "DefaultPaid": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string"
        },
        "DefaultTransportTypeTC": {
          "type": "string"
        },
        "FinancialReductionPercentageDefault": {
          "format": "double",
          "type": "number"
        },
        "FinancialReductionDaysDefault": {
          "format": "int32",
          "type": "integer"
        },
        "DefaultExpiryOffset": {
          "format": "int32",
          "type": "integer"
        },
        "GLDefaultExpiryOffset": {
          "format": "int64",
          "type": "integer"
        },
        "Role": {
          "type": "string"
        },
        "InternalInfo": {
          "type": "string"
        },
        "VATDeductable": {
          "type": "boolean"
        },
        "DefaultReductionPercentage": {
          "format": "double",
          "type": "number"
        },
        "Identifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartyIdentifier"
          }
        },
        "BookCategoryTC": {
          "type": "string"
        },
        "SmallEnterprise": {
          "type": "boolean"
        },
        "AutoSendInvoiceReminders": {
          "type": "boolean"
        },
        "DefaultCurrencyTC": {
          "type": "string"
        },
        "Regime": {
          "type": "string"
        },
        "SubRegime": {
          "type": "string"
        },
        "IsHighRisk": {
          "type": "boolean"
        },
        "SendUBL": {
          "type": "boolean"
        },
        "SendPDF": {
          "type": "boolean"
        }
      }
    },
    "AccountSettings": {
      "type": "object",
      "properties": {
        "BulkInputFastForward": {
          "type": "boolean"
        },
        "SendPeppolInvoiceReceivedMail": {
          "type": "boolean"
        },
        "ExternalLicenseID": {
          "type": "string"
        }
      }
    },
    "LicenseConfiguration": {
      "type": "object",
      "properties": {
        "LicenseID": {
          "format": "int32",
          "type": "integer"
        },
        "PeriodID": {
          "format": "int32",
          "type": "integer"
        },
        "Addons": {
          "$ref": "#/definitions/LicenseAddons"
        }
      }
    },
    "LicenseAddons": {
      "type": "object",
      "properties": {
        "AmountOfExtraUsers": {
          "format": "int32",
          "type": "integer"
        },
        "AmountOfExtraDocuments": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "RegisterAccountResponse": {
      "type": "object",
      "properties": {
        "CompanyID": {
          "format": "int32",
          "type": "integer"
        },
        "APIKey": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserIdBundle"
          }
        },
        "BankAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BankAccountState"
          }
        }
      }
    },
    "UserIdBundle": {
      "type": "object",
      "properties": {
        "UserID": {
          "format": "int32",
          "type": "integer"
        },
        "ExternalProviderID": {
          "type": "string"
        }
      }
    },
    "BankAccountState": {
      "type": "object",
      "properties": {
        "BankAccountID": {
          "format": "int32",
          "type": "integer"
        },
        "IBAN": {
          "type": "string"
        },
        "BankAccountName": {
          "type": "string"
        },
        "Active": {
          "type": "boolean"
        }
      }
    },
    "UpdateLicenseRequestModel": {
      "type": "object",
      "properties": {
        "CompanyID": {
          "format": "int32",
          "type": "integer"
        },
        "License": {
          "$ref": "#/definitions/LicenseConfiguration"
        }
      }
    },
    "UpdateLicenseResponseModel": {
      "type": "object",
      "properties": {
        "CompanyID": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AddNewLicenseBillableModel": {
      "type": "object",
      "properties": {
        "CompanyID": {
          "format": "int32",
          "type": "integer"
        },
        "AmountOfExtraDocuments": {
          "format": "int32",
          "type": "integer"
        },
        "AmountOfExtraUsers": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AddNewLicenseBillableResponseModel": {
      "type": "object",
      "properties": {
        "CompanyID": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Feed": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        }
      }
    },
    "FeedItem": {
      "type": "object",
      "properties": {
        "FeedItemID": {
          "format": "int32",
          "description": "The ID of the feeditem itself. Use this ID to confirm that the feed was succesfully processed",
          "type": "integer"
        },
        "EntityID": {
          "format": "int32",
          "description": "The ID of the order or the ID of the document. Use this ID in the Order or Document API to fetch the data",
          "type": "integer"
        },
        "EntityType": {
          "description": "Order or Document",
          "type": "string"
        },
        "PartyID": {
          "format": "int32",
          "description": "The ID of the company that uploaded the document. Use this ID in the contextPartyID header when downloading the order or document",
          "type": "integer"
        }
      }
    },
    "ConfirmRequest": {
      "description": "Optional, For logging purpose",
      "type": "object",
      "properties": {
        "RemoteServerName": {
          "type": "string"
        },
        "RemotePath": {
          "type": "string"
        }
      }
    },
    "CashbookInitialization": {
      "type": "object",
      "properties": {
        "StartDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "StartBalance": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "CashbookModel": {
      "type": "object",
      "properties": {
        "CashbookID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "CreationDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "Saldo": {
          "format": "double",
          "type": "number"
        },
        "LastEntryDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "Currency": {
          "type": "string"
        }
      }
    },
    "ODataQueryOptions_CashbookEntry": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "InlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      }
    },
    "ODataQueryContext": {
      "type": "object",
      "properties": {
        "Model": {
          "$ref": "#/definitions/IEdmModel",
          "readOnly": true
        },
        "ElementType": {
          "$ref": "#/definitions/IEdmType",
          "readOnly": true
        },
        "ElementClrType": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ODataRawQueryOptions": {
      "type": "object",
      "properties": {
        "Filter": {
          "type": "string",
          "readOnly": true
        },
        "OrderBy": {
          "type": "string",
          "readOnly": true
        },
        "Top": {
          "type": "string",
          "readOnly": true
        },
        "Skip": {
          "type": "string",
          "readOnly": true
        },
        "Select": {
          "type": "string",
          "readOnly": true
        },
        "Expand": {
          "type": "string",
          "readOnly": true
        },
        "InlineCount": {
          "type": "string",
          "readOnly": true
        },
        "Format": {
          "type": "string",
          "readOnly": true
        },
        "SkipToken": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SelectExpandQueryOption": {
      "type": "object",
      "properties": {
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "RawSelect": {
          "type": "string",
          "readOnly": true
        },
        "RawExpand": {
          "type": "string",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/SelectExpandQueryValidator"
        },
        "SelectExpandClause": {
          "$ref": "#/definitions/SelectExpandClause",
          "readOnly": true
        }
      }
    },
    "FilterQueryOption": {
      "type": "object",
      "properties": {
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/FilterQueryValidator"
        },
        "FilterClause": {
          "$ref": "#/definitions/FilterClause",
          "readOnly": true
        },
        "RawValue": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OrderByQueryOption": {
      "type": "object",
      "properties": {
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "OrderByNodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderByNode"
          },
          "readOnly": true
        },
        "RawValue": {
          "type": "string",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/OrderByQueryValidator"
        },
        "OrderByClause": {
          "$ref": "#/definitions/OrderByClause",
          "readOnly": true
        }
      }
    },
    "SkipQueryOption": {
      "type": "object",
      "properties": {
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "RawValue": {
          "type": "string",
          "readOnly": true
        },
        "Value": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/SkipQueryValidator"
        }
      }
    },
    "TopQueryOption": {
      "type": "object",
      "properties": {
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "RawValue": {
          "type": "string",
          "readOnly": true
        },
        "Value": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/TopQueryValidator"
        }
      }
    },
    "InlineCountQueryOption": {
      "type": "object",
      "properties": {
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "RawValue": {
          "type": "string",
          "readOnly": true
        },
        "Value": {
          "enum": [
            "None",
            "AllPages"
          ],
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ODataQueryValidator": {
      "type": "object",
      "properties": {}
    },
    "IEdmModel": {
      "type": "object",
      "properties": {
        "SchemaElements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IEdmSchemaElement"
          },
          "readOnly": true
        },
        "VocabularyAnnotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IEdmVocabularyAnnotation"
          },
          "readOnly": true
        },
        "ReferencedModels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IEdmModel"
          },
          "readOnly": true
        },
        "DirectValueAnnotationsManager": {
          "$ref": "#/definitions/IEdmDirectValueAnnotationsManager",
          "readOnly": true
        }
      }
    },
    "IEdmType": {
      "type": "object",
      "properties": {
        "TypeKind": {
          "enum": [
            "None",
            "Primitive",
            "Entity",
            "Complex",
            "Row",
            "Collection",
            "EntityReference",
            "Enum"
          ],
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SelectExpandQueryValidator": {
      "type": "object",
      "properties": {}
    },
    "SelectExpandClause": {
      "type": "object",
      "properties": {
        "SelectedItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectItem"
          },
          "readOnly": true
        },
        "AllSelected": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "FilterQueryValidator": {
      "type": "object",
      "properties": {}
    },
    "FilterClause": {
      "type": "object",
      "properties": {
        "Expression": {
          "$ref": "#/definitions/SingleValueNode",
          "readOnly": true
        },
        "RangeVariable": {
          "$ref": "#/definitions/RangeVariable",
          "readOnly": true
        },
        "ItemType": {
          "$ref": "#/definitions/IEdmTypeReference",
          "readOnly": true
        }
      }
    },
    "OrderByNode": {
      "type": "object",
      "properties": {
        "Direction": {
          "enum": [
            "Ascending",
            "Descending"
          ],
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OrderByQueryValidator": {
      "type": "object",
      "properties": {}
    },
    "OrderByClause": {
      "type": "object",
      "properties": {
        "ThenBy": {
          "$ref": "#/definitions/OrderByClause",
          "readOnly": true
        },
        "Expression": {
          "$ref": "#/definitions/SingleValueNode",
          "readOnly": true
        },
        "Direction": {
          "enum": [
            "Ascending",
            "Descending"
          ],
          "type": "string",
          "readOnly": true
        },
        "RangeVariable": {
          "$ref": "#/definitions/RangeVariable",
          "readOnly": true
        },
        "ItemType": {
          "$ref": "#/definitions/IEdmTypeReference",
          "readOnly": true
        }
      }
    },
    "SkipQueryValidator": {
      "type": "object",
      "properties": {}
    },
    "TopQueryValidator": {
      "type": "object",
      "properties": {}
    },
    "IEdmSchemaElement": {
      "type": "object",
      "properties": {
        "SchemaElementKind": {
          "enum": [
            "None",
            "TypeDefinition",
            "Function",
            "ValueTerm",
            "EntityContainer"
          ],
          "type": "string",
          "readOnly": true
        },
        "Namespace": {
          "type": "string",
          "readOnly": true
        },
        "Name": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IEdmVocabularyAnnotation": {
      "type": "object",
      "properties": {
        "Qualifier": {
          "type": "string",
          "readOnly": true
        },
        "Term": {
          "$ref": "#/definitions/IEdmTerm",
          "readOnly": true
        },
        "Target": {
          "$ref": "#/definitions/IEdmVocabularyAnnotatable",
          "readOnly": true
        }
      }
    },
    "IEdmDirectValueAnnotationsManager": {
      "type": "object",
      "properties": {}
    },
    "SelectItem": {
      "type": "object",
      "properties": {}
    },
    "SingleValueNode": {
      "type": "object",
      "properties": {
        "TypeReference": {
          "$ref": "#/definitions/IEdmTypeReference",
          "readOnly": true
        },
        "Kind": {
          "enum": [
            "None",
            "Constant",
            "Convert",
            "NonentityRangeVariableReference",
            "BinaryOperator",
            "UnaryOperator",
            "SingleValuePropertyAccess",
            "CollectionPropertyAccess",
            "SingleValueFunctionCall",
            "Any",
            "CollectionNavigationNode",
            "SingleNavigationNode",
            "SingleValueOpenPropertyAccess",
            "SingleEntityCast",
            "All",
            "EntityCollectionCast",
            "EntityRangeVariableReference",
            "SingleEntityFunctionCall",
            "CollectionFunctionCall",
            "EntityCollectionFunctionCall",
            "NamedFunctionParameter"
          ],
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RangeVariable": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "readOnly": true
        },
        "TypeReference": {
          "$ref": "#/definitions/IEdmTypeReference",
          "readOnly": true
        },
        "Kind": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "IEdmTypeReference": {
      "type": "object",
      "properties": {
        "IsNullable": {
          "type": "boolean",
          "readOnly": true
        },
        "Definition": {
          "$ref": "#/definitions/IEdmType",
          "readOnly": true
        }
      }
    },
    "IEdmTerm": {
      "type": "object",
      "properties": {
        "TermKind": {
          "enum": [
            "None",
            "Type",
            "Value"
          ],
          "type": "string",
          "readOnly": true
        },
        "SchemaElementKind": {
          "enum": [
            "None",
            "TypeDefinition",
            "Function",
            "ValueTerm",
            "EntityContainer"
          ],
          "type": "string",
          "readOnly": true
        },
        "Namespace": {
          "type": "string",
          "readOnly": true
        },
        "Name": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IEdmVocabularyAnnotatable": {
      "type": "object",
      "properties": {}
    },
    "PageResult_CashbookEntry": {
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CashbookEntry"
          }
        },
        "NextPageLink": {
          "type": "string"
        },
        "Count": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "CashbookEntry": {
      "type": "object",
      "properties": {
        "TransactionDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "EntryType": {
          "type": "string"
        },
        "Note": {
          "type": "string"
        },
        "InternalInformation": {
          "type": "string"
        },
        "Direction": {
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "DailyReceiptBookEntryModel": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string"
        },
        "VATPercentage": {
          "format": "double",
          "type": "number"
        },
        "TotalIncl": {
          "format": "double",
          "type": "number"
        },
        "InputDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "VentilationCodeTC": {
          "type": "string"
        }
      }
    },
    "PostDailyReceiptBookEntryResponseModel": {
      "type": "object",
      "properties": {
        "CashbookId": {
          "format": "int32",
          "type": "integer"
        },
        "CashbookEntryId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GetDailyReceiptEntryResponseModel": {
      "type": "object",
      "properties": {
        "CashbookEntryID": {
          "format": "int32",
          "type": "integer"
        },
        "CashbookID": {
          "format": "int32",
          "type": "integer"
        },
        "VAT": {
          "format": "double",
          "type": "number"
        },
        "Description": {
          "type": "string"
        },
        "Orderid": {
          "format": "int32",
          "type": "integer"
        },
        "TotalIncl": {
          "format": "double",
          "type": "number"
        },
        "TotalExcl": {
          "format": "double",
          "type": "number"
        },
        "TotalVAT": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "DailyReceiptBookModelResponseModel": {
      "type": "object",
      "properties": {
        "Cashbooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cashbook"
          }
        },
        "CashbookEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetDailyReceiptEntryResponseModel"
          }
        }
      }
    },
    "Cashbook": {
      "type": "object",
      "properties": {
        "CashbookID": {
          "format": "int32",
          "type": "integer"
        },
        "FromDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "Closed": {
          "type": "boolean"
        }
      }
    },
    "Document": {
      "type": "object",
      "properties": {
        "DocumentID": {
          "format": "int32",
          "type": "integer"
        },
        "CompanyID": {
          "format": "int32",
          "type": "integer"
        },
        "File": {
          "$ref": "#/definitions/File"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "DocumentDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "CreationDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "Tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "File": {
      "type": "object",
      "properties": {
        "FileID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "FileName": {
          "type": "string"
        },
        "MimeType": {
          "type": "string"
        },
        "FileContent": {
          "format": "byte",
          "type": "string"
        }
      }
    },
    "ODataQueryOptions_DocumentAPIView": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "InlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      }
    },
    "PageResult_DocumentAPIView": {
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentAPIView"
          }
        },
        "NextPageLink": {
          "type": "string"
        },
        "Count": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "DocumentAPIView": {
      "type": "object",
      "properties": {
        "DocumentID": {
          "format": "int32",
          "type": "integer"
        },
        "CompanyID": {
          "format": "int32",
          "type": "integer"
        },
        "File": {
          "$ref": "#/definitions/File"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "DocumentDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "CreationDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "Tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EinvoiceRegistrationPost": {
      "type": "object",
      "properties": {
        "TaxIdentifier": {
          "type": "string"
        },
        "CompanyName": {
          "type": "string"
        },
        "CommercialName": {
          "type": "string"
        },
        "Addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartyAddress"
          }
        },
        "TaxDeductable": {
          "type": "boolean"
        },
        "TaxLiable": {
          "type": "boolean"
        },
        "IBAN": {
          "type": "string"
        },
        "BIC": {
          "type": "string"
        },
        "Mobile": {
          "type": "string"
        },
        "Phone": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "ContactFirstName": {
          "type": "string"
        },
        "ContactLastName": {
          "type": "string"
        },
        "Language": {
          "type": "string"
        },
        "Identifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PartyIdentifier"
          }
        }
      }
    },
    "AccountRegistrationResponse": {
      "type": "object",
      "properties": {
        "RegistrationID": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GetEinvoiceAccountsReponse": {
      "type": "object",
      "properties": {
        "Companies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EinvoiceRegistrationsAccount"
          }
        }
      }
    },
    "EinvoiceRegistrationsAccount": {
      "type": "object",
      "properties": {
        "RegistrationID": {
          "format": "int32",
          "type": "integer"
        },
        "CompanyDetails": {
          "$ref": "#/definitions/EinvoiceRegistrationPost"
        },
        "Integrations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EinvoiceIntegration"
          }
        }
      }
    },
    "EinvoiceIntegration": {
      "type": "object",
      "properties": {
        "IntegrationID": {
          "format": "int32",
          "type": "integer"
        },
        "Integration": {
          "type": "string"
        },
        "IntegrationStatus": {
          "type": "string"
        },
        "IntegrationStatusDescription": {
          "type": "string"
        },
        "IntegrationDocumentToSign": {
          "type": "string"
        }
      }
    },
    "IntegrationPost": {
      "type": "object",
      "properties": {
        "Externalprovider": {
          "type": "string"
        },
        "Credentials": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Certificates": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/File"
          }
        }
      }
    },
    "CreateAndSendEDocumentPost": {
      "type": "object",
      "properties": {
        "TransportType": {
          "type": "string"
        },
        "Order": {
          "$ref": "#/definitions/Order"
        }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "OrderID": {
          "format": "int32",
          "type": "integer"
        },
        "CompanyID": {
          "format": "int32",
          "type": "integer"
        },
        "OrderPDF": {
          "$ref": "#/definitions/File"
        },
        "Attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/File"
          }
        },
        "OrderNumber": {
          "type": "string"
        },
        "CustomerID": {
          "format": "int32",
          "type": "integer"
        },
        "SupplierID": {
          "format": "int32",
          "type": "integer"
        },
        "CounterPartyID": {
          "format": "int32",
          "type": "integer"
        },
        "Customer": {
          "$ref": "#/definitions/Party"
        },
        "Supplier": {
          "$ref": "#/definitions/Party"
        },
        "CounterParty": {
          "$ref": "#/definitions/Party"
        },
        "OrderDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "ExpiryDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "OrderType": {
          "type": "string"
        },
        "LastModified": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "Created": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "OrderDirection": {
          "type": "string"
        },
        "OrderLines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLine"
          }
        },
        "BookingEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookingEntry"
          }
        },
        "Journal": {
          "type": "string"
        },
        "OrderTitle": {
          "type": "string"
        },
        "PaymentDiscountPercentage": {
          "format": "double",
          "type": "number"
        },
        "PaymentDiscountAmount": {
          "format": "double",
          "type": "number"
        },
        "PaymentReductionDays": {
          "format": "int32",
          "type": "integer"
        },
        "PaymentDiscountDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "VatGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VatGroup"
          }
        },
        "VentilationCode": {
          "type": "string"
        },
        "TotalExcl": {
          "format": "double",
          "type": "number"
        },
        "TotalIncl": {
          "format": "double",
          "type": "number"
        },
        "TotalVAT": {
          "format": "double",
          "type": "number"
        },
        "Reference": {
          "type": "string"
        },
        "Tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "DepartmentID": {
          "format": "int32",
          "type": "integer"
        },
        "PaymentReference": {
          "type": "string"
        },
        "AboutInvoiceNumber": {
          "type": "string"
        },
        "OCRRawText": {
          "type": "string"
        },
        "OCRMetaPages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OCRPage"
          }
        },
        "Paid": {
          "type": "boolean"
        },
        "PaidDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "ExternalProviderID": {
          "type": "string"
        },
        "ExternalProvider": {
          "type": "string"
        },
        "ProjectID": {
          "format": "int32",
          "type": "integer"
        },
        "ProjectName": {
          "type": "string"
        },
        "ExternalProviderReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalProviderReference"
          }
        },
        "Comments": {
          "type": "string"
        },
        "Currency": {
          "type": "string"
        },
        "VatDeduction": {
          "format": "double",
          "type": "number"
        },
        "MixedUseProfessionalPercentage": {
          "format": "double",
          "type": "number"
        },
        "InternalInfo": {
          "type": "string"
        },
        "IsSent": {
          "type": "boolean"
        },
        "Invoiced": {
          "type": "boolean"
        },
        "CustomFields": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "PeriodFrom": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "PeriodTill": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "CostCategoryCode": {
          "format": "int32",
          "type": "integer"
        },
        "AccountCode": {
          "format": "int32",
          "type": "integer"
        },
        "AccountingCostTypeTC": {
          "type": "string"
        },
        "LastReminder": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "RemindersSent": {
          "format": "int32",
          "type": "integer"
        },
        "ToPay": {
          "format": "double",
          "type": "number"
        },
        "OrderStatus": {
          "type": "string"
        },
        "ApprovalStatus": {
          "type": "string"
        },
        "Overdue": {
          "type": "boolean"
        },
        "DaysOverdue": {
          "format": "int32",
          "type": "integer"
        },
        "FXRateToForeign": {
          "format": "double",
          "type": "number"
        },
        "PaymentMethod": {
          "type": "string"
        },
        "DeliveryDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "ExportedToConnector": {
          "type": "boolean"
        },
        "PaymentLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentLink"
          }
        },
        "TemplateID": {
          "format": "int32",
          "type": "integer"
        },
        "MessageTemplateID": {
          "format": "int32",
          "type": "integer"
        },
        "AnalyticCostBearer": {
          "type": "string"
        },
        "AnalyticCostCenter": {
          "type": "string"
        },
        "AccountantVerificationNeeded": {
          "type": "boolean"
        },
        "CurrentDocumentDeliveryDetails": {
          "$ref": "#/definitions/DocumentDeliveryDetails"
        },
        "Messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderMessage"
          }
        },
        "AdditionalDocumentReference": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalDocuments"
          }
        },
        "PaymentTerms": {
          "type": "string"
        },
        "ContractDocumentReference": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractDocumentReference"
          }
        },
        "TaxPointDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "CategoryFieldItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryFieldItem"
          }
        },
        "Signature": {
          "$ref": "#/definitions/EInvoiceSignatureModel"
        }
      }
    },
    "OrderLine": {
      "type": "object",
      "properties": {
        "Quantity": {
          "format": "double",
          "type": "number"
        },
        "UnitPriceExcl": {
          "format": "double",
          "type": "number"
        },
        "AccountCode": {
          "format": "int32",
          "type": "integer"
        },
        "Reference": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "TotalExcl": {
          "format": "double",
          "type": "number"
        },
        "TotalVAT": {
          "format": "double",
          "type": "number"
        },
        "VATPercentage": {
          "format": "double",
          "type": "number"
        },
        "VentilationCode": {
          "type": "string"
        },
        "ProductID": {
          "format": "int32",
          "type": "integer"
        },
        "Unit": {
          "type": "string"
        },
        "CustomFields": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ExternalProviderReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalProviderReference"
          }
        },
        "InclLeading": {
          "type": "boolean"
        },
        "UnitPriceIncl": {
          "format": "double",
          "type": "number"
        },
        "TotalIncl": {
          "format": "double",
          "type": "number"
        },
        "AnalyticCostBearer": {
          "type": "string"
        },
        "AnalyticCostCenter": {
          "type": "string"
        },
        "ReductionPercentage": {
          "format": "double",
          "type": "number"
        },
        "DescriptionExtended": {
          "type": "string"
        }
      }
    },
    "BookingEntry": {
      "type": "object",
      "properties": {
        "BookingEntryID": {
          "format": "int32",
          "type": "integer"
        },
        "OrderID": {
          "format": "int32",
          "type": "integer"
        },
        "AccountCode": {
          "format": "int32",
          "type": "integer"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "DebetOrCredit": {
          "type": "string"
        },
        "VAT1": {
          "format": "int32",
          "type": "integer"
        },
        "VAT2": {
          "format": "int32",
          "type": "integer"
        },
        "VAT3": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "VatGroup": {
      "type": "object",
      "properties": {
        "VentilationCode": {
          "type": "string"
        },
        "VATPercentage": {
          "format": "double",
          "type": "number"
        },
        "TotalExcl": {
          "format": "double",
          "type": "number"
        },
        "TotalVAT": {
          "format": "double",
          "type": "number"
        },
        "TotalIncl": {
          "format": "double",
          "type": "number"
        },
        "Mtvh": {
          "format": "double",
          "type": "number"
        },
        "FinancialReductionAmount": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "OCRPage": {
      "type": "object",
      "properties": {
        "TextList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OCRText"
          }
        }
      }
    },
    "ExternalProviderReference": {
      "type": "object",
      "properties": {
        "ExternalProvider": {
          "type": "string"
        },
        "Category": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "EntityType": {
          "type": "string"
        },
        "EntityID": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PaymentLink": {
      "type": "object",
      "properties": {
        "ExternalProvider": {
          "type": "string"
        },
        "ClickUrl": {
          "type": "string"
        },
        "QRImageUrl": {
          "type": "string"
        }
      }
    },
    "DocumentDeliveryDetails": {
      "type": "object",
      "properties": {
        "DocumentRefusedDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "DocumentDeliveryDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "DocumentDeliveryInfo": {
          "type": "string"
        },
        "DocumentRefusedReasonTC": {
          "type": "string"
        },
        "DocumentRefusedInfo": {
          "type": "string"
        },
        "IsDocumentDelivered": {
          "type": "boolean"
        },
        "DocumentDeliveryStatus": {
          "type": "string"
        }
      }
    },
    "OrderMessage": {
      "type": "object",
      "properties": {
        "OrderID": {
          "format": "int32",
          "type": "integer"
        },
        "Description": {
          "type": "string"
        },
        "FileID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CreationDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "TransportType": {
          "type": "string"
        },
        "Success": {
          "type": "boolean"
        },
        "Trials": {
          "format": "int32",
          "type": "integer"
        },
        "Destination": {
          "type": "string"
        },
        "MessageDirection": {
          "type": "string"
        }
      }
    },
    "AdditionalDocuments": {
      "type": "object",
      "properties": {
        "DocumentDescription": {
          "type": "string"
        },
        "ID": {
          "type": "string"
        },
        "DocumentType": {
          "type": "string"
        },
        "Attachment": {
          "$ref": "#/definitions/File"
        },
        "CustomFields": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ContractDocumentReference": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        }
      }
    },
    "CategoryFieldItem": {
      "type": "object",
      "properties": {
        "Value": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "EInvoiceSignatureModel": {
      "type": "object",
      "properties": {
        "OrginalString": {
          "type": "string"
        },
        "NetworkCertificateNumber": {
          "type": "string"
        },
        "DocumentCertificateNumber": {
          "type": "string"
        },
        "UUID": {
          "type": "string"
        },
        "NetworkStamp": {
          "type": "string"
        },
        "DocumentStamp": {
          "type": "string"
        },
        "DateTimeInfo": {
          "$ref": "#/definitions/TimezoneInfo"
        },
        "QRCode": {
          "type": "string"
        },
        "Cfdi": {
          "type": "string"
        }
      }
    },
    "OCRText": {
      "type": "object",
      "properties": {
        "Text": {
          "type": "string"
        },
        "X": {
          "format": "double",
          "type": "number"
        },
        "Y": {
          "format": "double",
          "type": "number"
        },
        "Width": {
          "format": "double",
          "type": "number"
        },
        "Height": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "TimezoneInfo": {
      "type": "object",
      "properties": {
        "TimeZoneInfo": {
          "type": "string"
        },
        "DateTime": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "ODataQueryOptions_Order": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "InlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      }
    },
    "PageResult_Order": {
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Order"
          }
        },
        "NextPageLink": {
          "type": "string"
        },
        "Count": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "Webhook": {
      "type": "object",
      "properties": {
        "WebhookID": {
          "format": "int32",
          "type": "integer"
        },
        "CompanyID": {
          "format": "int32",
          "type": "integer"
        },
        "UserID": {
          "format": "int32",
          "type": "integer"
        },
        "EntityType": {
          "type": "string"
        },
        "EntityUpdateType": {
          "type": "string"
        },
        "WebhookURL": {
          "type": "string"
        },
        "Secret": {
          "type": "string"
        }
      }
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "BankAccountTransactionID": {
          "format": "int32",
          "type": "integer"
        },
        "BankName": {
          "type": "string"
        },
        "IBAN": {
          "type": "string"
        },
        "BIC": {
          "type": "string"
        },
        "BankAccountID": {
          "format": "int32",
          "type": "integer"
        },
        "DocumentId": {
          "format": "int32",
          "type": "integer"
        },
        "IBANCounterParty": {
          "type": "string"
        },
        "BICCounterParty": {
          "type": "string"
        },
        "NameCounterParty": {
          "type": "string"
        },
        "TotalAmount": {
          "format": "double",
          "type": "number"
        },
        "TransactionType": {
          "type": "string"
        },
        "ValueDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "Currency": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ExternalProviderID": {
          "type": "string"
        },
        "ExternalProviderTC": {
          "type": "string"
        },
        "FreeMessage": {
          "type": "string"
        },
        "CodaSource": {
          "type": "string"
        },
        "CodaFileID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BankReference": {
          "type": "string"
        },
        "ClientReference": {
          "type": "string"
        },
        "Note": {
          "type": "string"
        },
        "AssignedEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignedEntity"
          }
        },
        "ProprietaryBankTransactionCode": {
          "type": "string"
        },
        "BankTransactionCode": {
          "type": "string"
        }
      }
    },
    "AssignedEntity": {
      "type": "object",
      "properties": {
        "AssignedAmount": {
          "format": "double",
          "type": "number"
        },
        "FXRateToBankCurrency": {
          "format": "double",
          "type": "number"
        },
        "EntityType": {
          "type": "string"
        },
        "EntityID": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ODataQueryOptions_Transaction": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "InlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      }
    },
    "PageResult_Transaction": {
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transaction"
          }
        },
        "NextPageLink": {
          "type": "string"
        },
        "Count": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "GLAccount": {
      "type": "object",
      "properties": {
        "Code": {
          "format": "int32",
          "type": "integer"
        },
        "Description": {
          "type": "string"
        },
        "GLAccountType": {
          "type": "string"
        }
      }
    },
    "Journal": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "JournalType": {
          "enum": [
            "Income",
            "Cost"
          ],
          "type": "string"
        }
      }
    },
    "CompanySearchResult": {
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanySearchResultItem"
          }
        }
      }
    },
    "CompanySearchResultItem": {
      "type": "object",
      "properties": {
        "Source": {
          "description": "Either KBO or VIES",
          "type": "string"
        },
        "CompanyIdentification": {
          "type": "string"
        },
        "Street": {
          "type": "string"
        },
        "Number": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Zipcode": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "Box": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "CommercialName": {
          "type": "string"
        }
      }
    },
    "TypeCodeResult": {
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TypeCodeResultItem"
          }
        }
      }
    },
    "TypeCodeResultItem": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "OAuthAccessTokenRequest": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string"
        },
        "client_secret": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "grant_type": {
          "type": "string"
        },
        "redirect_uri": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "PostPaymentRequest": {
      "type": "object",
      "properties": {
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "Description": {
          "type": "string"
        },
        "Date": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "SendRequest": {
      "type": "object",
      "properties": {
        "OrderIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "TransportType": {
          "type": "string"
        },
        "PrintType": {
          "type": "string"
        }
      }
    },
    "ODataQueryOptions_Party": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "InlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      }
    },
    "PageResult_Party": {
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Party"
          }
        },
        "NextPageLink": {
          "type": "string"
        },
        "Count": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "RegisterParticipantRequest": {
      "type": "object",
      "properties": {
        "CompanyID": {
          "type": "string"
        }
      }
    },
    "DeleteParticipantRequest": {
      "type": "object",
      "properties": {
        "CompanyID": {
          "type": "string"
        }
      }
    },
    "InboxGetResult": {
      "type": "object",
      "properties": {
        "InboxItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InboxGetResultItem"
          }
        }
      }
    },
    "InboxGetResultItem": {
      "type": "object",
      "properties": {
        "InboxItemID": {
          "format": "int32",
          "type": "integer"
        },
        "SenderPeppolID": {
          "type": "string"
        },
        "PeppolDocumentType": {
          "type": "string"
        },
        "ReceiverPeppolID": {
          "type": "string"
        },
        "SenderCompanyID": {
          "type": "string"
        },
        "ReceiverCompanyID": {
          "type": "string"
        },
        "CreationDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "PeppolFileID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "RefusePeppolItemRequest": {
      "type": "object",
      "properties": {
        "RefusalReason": {
          "type": "string"
        }
      }
    },
    "ParticipantInformationResponse": {
      "type": "object",
      "properties": {
        "Registered": {
          "type": "boolean"
        },
        "Identifier": {
          "type": "string"
        },
        "DocumentTypes": {
          "type": "array",
          "items": {
            "enum": [
              "Invoice4",
              "Invoice5",
              "CreditNote5",
              "MLR",
              "MLRBISV3",
              "MLRBISV2",
              "IMR",
              "EFFF",
              "BISv3Invoice",
              "BISv3CreditNote",
              "BISv3OrderForm",
              "BISv3AUNZInvoice",
              "BISv3AUNZCreditNote",
              "XRechnung22Invoice",
              "XRechnung22CreditNote",
              "SIInvoice",
              "SICreditNote",
              "UBLBEInvoice",
              "UBLBECreditNote",
              "CII",
              "PTCIUSInvoice",
              "PTCIUSCreditNote",
              "BISv3SGInvoice",
              "BISv3SGCreditNote",
              "ROCIUSInvoice",
              "ROCIUSCreditNote",
              "XRechnung3Invoice",
              "XRechnung3CreditNote",
              "EndUserStatistics",
              "TransactionStatistics",
              "MYPintInvoice",
              "MYPintCreditNote",
              "MYPintInvoiceWildCard",
              "MYPintCreditNoteWildCard",
              "PintInvoiceWildCard",
              "PintCreditNoteWildCard",
              "AUNZPintInvoice",
              "AUNZPintCreditNote"
            ],
            "type": "string"
          }
        },
        "ServiceDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceDetail"
          }
        },
        "ServiceProviderID": {
          "type": "string"
        }
      }
    },
    "ServiceDetail": {
      "type": "object",
      "properties": {
        "DocumentIdentifier": {
          "type": "string"
        },
        "DocumentIdentifierScheme": {
          "type": "string"
        },
        "Processes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessInfo"
          }
        }
      }
    },
    "ProcessInfo": {
      "type": "object",
      "properties": {
        "ProcessIdentifier": {
          "type": "string"
        },
        "ProcessIdentifierScheme": {
          "type": "string"
        },
        "Endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Endpoint"
          }
        }
      }
    },
    "Endpoint": {
      "type": "object",
      "properties": {
        "EndpointURL": {
          "type": "string"
        },
        "TransportProfile": {
          "type": "string"
        },
        "Certificate": {
          "type": "string"
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "ProductID": {
          "format": "int32",
          "type": "integer"
        },
        "Reference": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "AmountExcl": {
          "format": "double",
          "type": "number"
        },
        "VAT": {
          "format": "double",
          "type": "number"
        },
        "Unit": {
          "type": "string"
        },
        "GroupID": {
          "format": "int32",
          "type": "integer"
        },
        "GroupName": {
          "type": "string"
        },
        "AmountIncl": {
          "format": "double",
          "type": "number"
        },
        "StockQuantity": {
          "format": "double",
          "type": "number"
        },
        "MinimumBilledQuantity": {
          "format": "double",
          "type": "number"
        },
        "BuyExcl": {
          "format": "double",
          "type": "number"
        },
        "InternalInformation": {
          "type": "string"
        },
        "Created": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "LastModified": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        },
        "EAN": {
          "type": "string"
        },
        "GTIN": {
          "type": "string"
        },
        "GLN": {
          "type": "string"
        },
        "ExternalProviderTC": {
          "type": "string"
        },
        "ChildProducts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        }
      }
    },
    "ODataQueryOptions_Product": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#/definitions/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#/definitions/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#/definitions/SelectExpandQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#/definitions/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#/definitions/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#/definitions/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#/definitions/TopQueryOption",
          "readOnly": true
        },
        "InlineCount": {
          "$ref": "#/definitions/InlineCountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#/definitions/ODataQueryValidator"
        }
      }
    },
    "PageResult_Product": {
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        },
        "NextPageLink": {
          "type": "string"
        },
        "Count": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "ReportsExportOverViewModel": {
      "type": "object",
      "properties": {
        "ReportID": {
          "format": "int32",
          "type": "integer"
        },
        "ReportName": {
          "type": "string"
        }
      }
    },
    "ReportDetailModel": {
      "type": "object",
      "properties": {
        "ID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "CSVs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ToProcessSaveRequest": {
      "type": "object",
      "properties": {
        "Split": {
          "type": "boolean"
        },
        "File": {
          "$ref": "#/definitions/File"
        },
        "FileSource": {
          "$ref": "#/definitions/File"
        },
        "MetaData": {
          "$ref": "#/definitions/UploadMetadata",
          "description": "Optional"
        }
      }
    },
    "UploadMetadata": {
      "type": "object",
      "properties": {
        "TotalIncl": {
          "format": "double",
          "type": "number"
        },
        "CostType": {
          "type": "string"
        },
        "PaymentMethod": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "CurrencyTC": {
          "type": "string"
        },
        "OrderDate": {
          "format": "date-time",
          "type": "string",
          "x-nullable": true
        }
      }
    }
  }
}