// Code generated by go-swagger; DO NOT EDIT.

package accountant

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/becoded/billit/model"
)

// AccountantGetIndexReader is a Reader for the AccountantGetIndex structure.
type AccountantGetIndexReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AccountantGetIndexReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAccountantGetIndexOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAccountantGetIndexBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAccountantGetIndexInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/accountant/feeds/{feedName}] Accountant_GetIndex", response, response.Code())
	}
}

// NewAccountantGetIndexOK creates a AccountantGetIndexOK with default headers values
func NewAccountantGetIndexOK() *AccountantGetIndexOK {
	return &AccountantGetIndexOK{}
}

/*
AccountantGetIndexOK describes a response with status code 200, with default header values.

Get a list of all files to download.
*/
type AccountantGetIndexOK struct {
	Payload []*model.FeedItem
}

// IsSuccess returns true when this accountant get index o k response has a 2xx status code
func (o *AccountantGetIndexOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this accountant get index o k response has a 3xx status code
func (o *AccountantGetIndexOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accountant get index o k response has a 4xx status code
func (o *AccountantGetIndexOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this accountant get index o k response has a 5xx status code
func (o *AccountantGetIndexOK) IsServerError() bool {
	return false
}

// IsCode returns true when this accountant get index o k response a status code equal to that given
func (o *AccountantGetIndexOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the accountant get index o k response
func (o *AccountantGetIndexOK) Code() int {
	return 200
}

func (o *AccountantGetIndexOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/accountant/feeds/{feedName}][%d] accountantGetIndexOK %s", 200, payload)
}

func (o *AccountantGetIndexOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/accountant/feeds/{feedName}][%d] accountantGetIndexOK %s", 200, payload)
}

func (o *AccountantGetIndexOK) GetPayload() []*model.FeedItem {
	return o.Payload
}

func (o *AccountantGetIndexOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountantGetIndexBadRequest creates a AccountantGetIndexBadRequest with default headers values
func NewAccountantGetIndexBadRequest() *AccountantGetIndexBadRequest {
	return &AccountantGetIndexBadRequest{}
}

/*
AccountantGetIndexBadRequest describes a response with status code 400, with default header values.

The request did not validate. Check response body for more details
*/
type AccountantGetIndexBadRequest struct {
	Payload []*model.FeedItem
}

// IsSuccess returns true when this accountant get index bad request response has a 2xx status code
func (o *AccountantGetIndexBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this accountant get index bad request response has a 3xx status code
func (o *AccountantGetIndexBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accountant get index bad request response has a 4xx status code
func (o *AccountantGetIndexBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this accountant get index bad request response has a 5xx status code
func (o *AccountantGetIndexBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this accountant get index bad request response a status code equal to that given
func (o *AccountantGetIndexBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the accountant get index bad request response
func (o *AccountantGetIndexBadRequest) Code() int {
	return 400
}

func (o *AccountantGetIndexBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/accountant/feeds/{feedName}][%d] accountantGetIndexBadRequest %s", 400, payload)
}

func (o *AccountantGetIndexBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/accountant/feeds/{feedName}][%d] accountantGetIndexBadRequest %s", 400, payload)
}

func (o *AccountantGetIndexBadRequest) GetPayload() []*model.FeedItem {
	return o.Payload
}

func (o *AccountantGetIndexBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAccountantGetIndexInternalServerError creates a AccountantGetIndexInternalServerError with default headers values
func NewAccountantGetIndexInternalServerError() *AccountantGetIndexInternalServerError {
	return &AccountantGetIndexInternalServerError{}
}

/*
AccountantGetIndexInternalServerError describes a response with status code 500, with default header values.

There was a problem. We have been notified already but dont hesitate to contact support.
*/
type AccountantGetIndexInternalServerError struct {
	Payload []*model.FeedItem
}

// IsSuccess returns true when this accountant get index internal server error response has a 2xx status code
func (o *AccountantGetIndexInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this accountant get index internal server error response has a 3xx status code
func (o *AccountantGetIndexInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accountant get index internal server error response has a 4xx status code
func (o *AccountantGetIndexInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this accountant get index internal server error response has a 5xx status code
func (o *AccountantGetIndexInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this accountant get index internal server error response a status code equal to that given
func (o *AccountantGetIndexInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the accountant get index internal server error response
func (o *AccountantGetIndexInternalServerError) Code() int {
	return 500
}

func (o *AccountantGetIndexInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/accountant/feeds/{feedName}][%d] accountantGetIndexInternalServerError %s", 500, payload)
}

func (o *AccountantGetIndexInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1/accountant/feeds/{feedName}][%d] accountantGetIndexInternalServerError %s", 500, payload)
}

func (o *AccountantGetIndexInternalServerError) GetPayload() []*model.FeedItem {
	return o.Payload
}

func (o *AccountantGetIndexInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
