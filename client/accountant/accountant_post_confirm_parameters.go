// Code generated by go-swagger; DO NOT EDIT.

package accountant

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/becoded/billit/model"
)

// NewAccountantPostConfirmParams creates a new AccountantPostConfirmParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAccountantPostConfirmParams() *AccountantPostConfirmParams {
	return &AccountantPostConfirmParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAccountantPostConfirmParamsWithTimeout creates a new AccountantPostConfirmParams object
// with the ability to set a timeout on a request.
func NewAccountantPostConfirmParamsWithTimeout(timeout time.Duration) *AccountantPostConfirmParams {
	return &AccountantPostConfirmParams{
		timeout: timeout,
	}
}

// NewAccountantPostConfirmParamsWithContext creates a new AccountantPostConfirmParams object
// with the ability to set a context for a request.
func NewAccountantPostConfirmParamsWithContext(ctx context.Context) *AccountantPostConfirmParams {
	return &AccountantPostConfirmParams{
		Context: ctx,
	}
}

// NewAccountantPostConfirmParamsWithHTTPClient creates a new AccountantPostConfirmParams object
// with the ability to set a custom HTTPClient for a request.
func NewAccountantPostConfirmParamsWithHTTPClient(client *http.Client) *AccountantPostConfirmParams {
	return &AccountantPostConfirmParams{
		HTTPClient: client,
	}
}

/*
AccountantPostConfirmParams contains all the parameters to send to the API endpoint

	for the accountant post confirm operation.

	Typically these are written to a http.Request.
*/
type AccountantPostConfirmParams struct {

	// ConfirmRequest.
	ConfirmRequest *model.ConfirmRequest

	// FeedItemID.
	//
	// Format: int32
	FeedItemID int32

	// FeedName.
	FeedName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the accountant post confirm params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AccountantPostConfirmParams) WithDefaults() *AccountantPostConfirmParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the accountant post confirm params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AccountantPostConfirmParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the accountant post confirm params
func (o *AccountantPostConfirmParams) WithTimeout(timeout time.Duration) *AccountantPostConfirmParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the accountant post confirm params
func (o *AccountantPostConfirmParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the accountant post confirm params
func (o *AccountantPostConfirmParams) WithContext(ctx context.Context) *AccountantPostConfirmParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the accountant post confirm params
func (o *AccountantPostConfirmParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the accountant post confirm params
func (o *AccountantPostConfirmParams) WithHTTPClient(client *http.Client) *AccountantPostConfirmParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the accountant post confirm params
func (o *AccountantPostConfirmParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConfirmRequest adds the confirmRequest to the accountant post confirm params
func (o *AccountantPostConfirmParams) WithConfirmRequest(confirmRequest *model.ConfirmRequest) *AccountantPostConfirmParams {
	o.SetConfirmRequest(confirmRequest)
	return o
}

// SetConfirmRequest adds the confirmRequest to the accountant post confirm params
func (o *AccountantPostConfirmParams) SetConfirmRequest(confirmRequest *model.ConfirmRequest) {
	o.ConfirmRequest = confirmRequest
}

// WithFeedItemID adds the feedItemID to the accountant post confirm params
func (o *AccountantPostConfirmParams) WithFeedItemID(feedItemID int32) *AccountantPostConfirmParams {
	o.SetFeedItemID(feedItemID)
	return o
}

// SetFeedItemID adds the feedItemId to the accountant post confirm params
func (o *AccountantPostConfirmParams) SetFeedItemID(feedItemID int32) {
	o.FeedItemID = feedItemID
}

// WithFeedName adds the feedName to the accountant post confirm params
func (o *AccountantPostConfirmParams) WithFeedName(feedName string) *AccountantPostConfirmParams {
	o.SetFeedName(feedName)
	return o
}

// SetFeedName adds the feedName to the accountant post confirm params
func (o *AccountantPostConfirmParams) SetFeedName(feedName string) {
	o.FeedName = feedName
}

// WriteToRequest writes these params to a swagger request
func (o *AccountantPostConfirmParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.ConfirmRequest != nil {
		if err := r.SetBodyParam(o.ConfirmRequest); err != nil {
			return err
		}
	}

	// path param feedItemID
	if err := r.SetPathParam("feedItemID", swag.FormatInt32(o.FeedItemID)); err != nil {
		return err
	}

	// path param feedName
	if err := r.SetPathParam("feedName", o.FeedName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
