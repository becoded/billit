// Code generated by go-swagger; DO NOT EDIT.

package einvoice

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewEinvoiceDeleteRegistrationIntegrationParams creates a new EinvoiceDeleteRegistrationIntegrationParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewEinvoiceDeleteRegistrationIntegrationParams() *EinvoiceDeleteRegistrationIntegrationParams {
	return &EinvoiceDeleteRegistrationIntegrationParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewEinvoiceDeleteRegistrationIntegrationParamsWithTimeout creates a new EinvoiceDeleteRegistrationIntegrationParams object
// with the ability to set a timeout on a request.
func NewEinvoiceDeleteRegistrationIntegrationParamsWithTimeout(timeout time.Duration) *EinvoiceDeleteRegistrationIntegrationParams {
	return &EinvoiceDeleteRegistrationIntegrationParams{
		timeout: timeout,
	}
}

// NewEinvoiceDeleteRegistrationIntegrationParamsWithContext creates a new EinvoiceDeleteRegistrationIntegrationParams object
// with the ability to set a context for a request.
func NewEinvoiceDeleteRegistrationIntegrationParamsWithContext(ctx context.Context) *EinvoiceDeleteRegistrationIntegrationParams {
	return &EinvoiceDeleteRegistrationIntegrationParams{
		Context: ctx,
	}
}

// NewEinvoiceDeleteRegistrationIntegrationParamsWithHTTPClient creates a new EinvoiceDeleteRegistrationIntegrationParams object
// with the ability to set a custom HTTPClient for a request.
func NewEinvoiceDeleteRegistrationIntegrationParamsWithHTTPClient(client *http.Client) *EinvoiceDeleteRegistrationIntegrationParams {
	return &EinvoiceDeleteRegistrationIntegrationParams{
		HTTPClient: client,
	}
}

/*
EinvoiceDeleteRegistrationIntegrationParams contains all the parameters to send to the API endpoint

	for the einvoice delete registration integration operation.

	Typically these are written to a http.Request.
*/
type EinvoiceDeleteRegistrationIntegrationParams struct {

	// IntegrationID.
	//
	// Format: int32
	IntegrationID int32

	// RegistrationID.
	//
	// Format: int32
	RegistrationID int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the einvoice delete registration integration params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *EinvoiceDeleteRegistrationIntegrationParams) WithDefaults() *EinvoiceDeleteRegistrationIntegrationParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the einvoice delete registration integration params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *EinvoiceDeleteRegistrationIntegrationParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the einvoice delete registration integration params
func (o *EinvoiceDeleteRegistrationIntegrationParams) WithTimeout(timeout time.Duration) *EinvoiceDeleteRegistrationIntegrationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the einvoice delete registration integration params
func (o *EinvoiceDeleteRegistrationIntegrationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the einvoice delete registration integration params
func (o *EinvoiceDeleteRegistrationIntegrationParams) WithContext(ctx context.Context) *EinvoiceDeleteRegistrationIntegrationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the einvoice delete registration integration params
func (o *EinvoiceDeleteRegistrationIntegrationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the einvoice delete registration integration params
func (o *EinvoiceDeleteRegistrationIntegrationParams) WithHTTPClient(client *http.Client) *EinvoiceDeleteRegistrationIntegrationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the einvoice delete registration integration params
func (o *EinvoiceDeleteRegistrationIntegrationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIntegrationID adds the integrationID to the einvoice delete registration integration params
func (o *EinvoiceDeleteRegistrationIntegrationParams) WithIntegrationID(integrationID int32) *EinvoiceDeleteRegistrationIntegrationParams {
	o.SetIntegrationID(integrationID)
	return o
}

// SetIntegrationID adds the integrationId to the einvoice delete registration integration params
func (o *EinvoiceDeleteRegistrationIntegrationParams) SetIntegrationID(integrationID int32) {
	o.IntegrationID = integrationID
}

// WithRegistrationID adds the registrationID to the einvoice delete registration integration params
func (o *EinvoiceDeleteRegistrationIntegrationParams) WithRegistrationID(registrationID int32) *EinvoiceDeleteRegistrationIntegrationParams {
	o.SetRegistrationID(registrationID)
	return o
}

// SetRegistrationID adds the registrationId to the einvoice delete registration integration params
func (o *EinvoiceDeleteRegistrationIntegrationParams) SetRegistrationID(registrationID int32) {
	o.RegistrationID = registrationID
}

// WriteToRequest writes these params to a swagger request
func (o *EinvoiceDeleteRegistrationIntegrationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param integrationID
	if err := r.SetPathParam("integrationID", swag.FormatInt32(o.IntegrationID)); err != nil {
		return err
	}

	// path param registrationID
	if err := r.SetPathParam("registrationID", swag.FormatInt32(o.RegistrationID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
