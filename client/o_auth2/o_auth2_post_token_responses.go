// Code generated by go-swagger; DO NOT EDIT.

package o_auth2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// OAuth2PostTokenReader is a Reader for the OAuth2PostToken structure.
type OAuth2PostTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OAuth2PostTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOAuth2PostTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[POST /OAuth2/token] OAuth2_PostToken", response, response.Code())
	}
}

// NewOAuth2PostTokenOK creates a OAuth2PostTokenOK with default headers values
func NewOAuth2PostTokenOK() *OAuth2PostTokenOK {
	return &OAuth2PostTokenOK{}
}

/*
OAuth2PostTokenOK describes a response with status code 200, with default header values.

OK
*/
type OAuth2PostTokenOK struct {
	Payload interface{}
}

// IsSuccess returns true when this o auth2 post token o k response has a 2xx status code
func (o *OAuth2PostTokenOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this o auth2 post token o k response has a 3xx status code
func (o *OAuth2PostTokenOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this o auth2 post token o k response has a 4xx status code
func (o *OAuth2PostTokenOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this o auth2 post token o k response has a 5xx status code
func (o *OAuth2PostTokenOK) IsServerError() bool {
	return false
}

// IsCode returns true when this o auth2 post token o k response a status code equal to that given
func (o *OAuth2PostTokenOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the o auth2 post token o k response
func (o *OAuth2PostTokenOK) Code() int {
	return 200
}

func (o *OAuth2PostTokenOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /OAuth2/token][%d] oAuth2PostTokenOK %s", 200, payload)
}

func (o *OAuth2PostTokenOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /OAuth2/token][%d] oAuth2PostTokenOK %s", 200, payload)
}

func (o *OAuth2PostTokenOK) GetPayload() interface{} {
	return o.Payload
}

func (o *OAuth2PostTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
