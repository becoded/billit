// Code generated by go-swagger; DO NOT EDIT.

package order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewOrderGetOrderParams creates a new OrderGetOrderParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewOrderGetOrderParams() *OrderGetOrderParams {
	return &OrderGetOrderParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewOrderGetOrderParamsWithTimeout creates a new OrderGetOrderParams object
// with the ability to set a timeout on a request.
func NewOrderGetOrderParamsWithTimeout(timeout time.Duration) *OrderGetOrderParams {
	return &OrderGetOrderParams{
		timeout: timeout,
	}
}

// NewOrderGetOrderParamsWithContext creates a new OrderGetOrderParams object
// with the ability to set a context for a request.
func NewOrderGetOrderParamsWithContext(ctx context.Context) *OrderGetOrderParams {
	return &OrderGetOrderParams{
		Context: ctx,
	}
}

// NewOrderGetOrderParamsWithHTTPClient creates a new OrderGetOrderParams object
// with the ability to set a custom HTTPClient for a request.
func NewOrderGetOrderParamsWithHTTPClient(client *http.Client) *OrderGetOrderParams {
	return &OrderGetOrderParams{
		HTTPClient: client,
	}
}

/*
OrderGetOrderParams contains all the parameters to send to the API endpoint

	for the order get order operation.

	Typically these are written to a http.Request.
*/
type OrderGetOrderParams struct {

	// DocumentType.
	DocumentType *string

	// OrderID.
	//
	// Format: int32
	OrderID int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the order get order params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *OrderGetOrderParams) WithDefaults() *OrderGetOrderParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the order get order params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *OrderGetOrderParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the order get order params
func (o *OrderGetOrderParams) WithTimeout(timeout time.Duration) *OrderGetOrderParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the order get order params
func (o *OrderGetOrderParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the order get order params
func (o *OrderGetOrderParams) WithContext(ctx context.Context) *OrderGetOrderParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the order get order params
func (o *OrderGetOrderParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the order get order params
func (o *OrderGetOrderParams) WithHTTPClient(client *http.Client) *OrderGetOrderParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the order get order params
func (o *OrderGetOrderParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDocumentType adds the documentType to the order get order params
func (o *OrderGetOrderParams) WithDocumentType(documentType *string) *OrderGetOrderParams {
	o.SetDocumentType(documentType)
	return o
}

// SetDocumentType adds the documentType to the order get order params
func (o *OrderGetOrderParams) SetDocumentType(documentType *string) {
	o.DocumentType = documentType
}

// WithOrderID adds the orderID to the order get order params
func (o *OrderGetOrderParams) WithOrderID(orderID int32) *OrderGetOrderParams {
	o.SetOrderID(orderID)
	return o
}

// SetOrderID adds the orderId to the order get order params
func (o *OrderGetOrderParams) SetOrderID(orderID int32) {
	o.OrderID = orderID
}

// WriteToRequest writes these params to a swagger request
func (o *OrderGetOrderParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.DocumentType != nil {

		// query param documentType
		var qrDocumentType string

		if o.DocumentType != nil {
			qrDocumentType = *o.DocumentType
		}
		qDocumentType := qrDocumentType
		if qDocumentType != "" {

			if err := r.SetQueryParam("documentType", qDocumentType); err != nil {
				return err
			}
		}
	}

	// path param orderID
	if err := r.SetPathParam("orderID", swag.FormatInt32(o.OrderID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
