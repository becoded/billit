// Code generated by go-swagger; DO NOT EDIT.

package order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// OrderDeleteOrderReader is a Reader for the OrderDeleteOrder structure.
type OrderDeleteOrderReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OrderDeleteOrderReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOrderDeleteOrderOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[DELETE /v1/orders/{orderID}] Order_DeleteOrder", response, response.Code())
	}
}

// NewOrderDeleteOrderOK creates a OrderDeleteOrderOK with default headers values
func NewOrderDeleteOrderOK() *OrderDeleteOrderOK {
	return &OrderDeleteOrderOK{}
}

/*
OrderDeleteOrderOK describes a response with status code 200, with default header values.

Delete an order
*/
type OrderDeleteOrderOK struct {
	Payload int32
}

// IsSuccess returns true when this order delete order o k response has a 2xx status code
func (o *OrderDeleteOrderOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this order delete order o k response has a 3xx status code
func (o *OrderDeleteOrderOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this order delete order o k response has a 4xx status code
func (o *OrderDeleteOrderOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this order delete order o k response has a 5xx status code
func (o *OrderDeleteOrderOK) IsServerError() bool {
	return false
}

// IsCode returns true when this order delete order o k response a status code equal to that given
func (o *OrderDeleteOrderOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the order delete order o k response
func (o *OrderDeleteOrderOK) Code() int {
	return 200
}

func (o *OrderDeleteOrderOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/orders/{orderID}][%d] orderDeleteOrderOK %s", 200, payload)
}

func (o *OrderDeleteOrderOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /v1/orders/{orderID}][%d] orderDeleteOrderOK %s", 200, payload)
}

func (o *OrderDeleteOrderOK) GetPayload() int32 {
	return o.Payload
}

func (o *OrderDeleteOrderOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
